2a3
> #include <linux/cdev.h>
9a11,29
> static struct cdev cdv;
> 
> static int led_open(struct inode* inode, struct file* filp) { return 0; }
> 
> static ssize_t led_write(struct file* filp, const char* buf, size_t count, loff_t* pos)
> {
> 	printk(KERN_INFO "led_write is called\n");
>         return 1;
> }
> 
> static int led_release(struct inode* inode, struct file* filp){ return 0; }
> 
> static struct file_operations led_fops =
> {
> 	owner   : THIS_MODULE,
> 	write   : led_write,
> 	open    : led_open,
> 	release : led_release,
> };
19d38
< 
20a40,47
> 
> 	cdev_init(&cdv, &led_fops);
> 	retval = cdev_add(&cdv, MKDEV(MAJOR(dev),0), 1);
> 	if(retval < 0){
> 		printk(KERN_ERR "cdev_add failed. major:%d, minor:0\n",MAJOR(dev));
> 		return retval;
> 	}
> 
25a53
> 	cdev_del(&cdv);
